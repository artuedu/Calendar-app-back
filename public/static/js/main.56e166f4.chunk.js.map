{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-espa√±ol.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","redirect","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setvalues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56e166f4.chunk.js","sourcesContent":["export const types = {\r\n\r\n    uiOpenModal: '[ui] Open Modal',\r\n    uiCloseModal: '[ui] Close Modal',\r\n\r\n    eventSetActive: '[event] Set Active',\r\n    eventLogout: '[event] Logout event',\r\n\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add New',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Event loader',\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n    \r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from '../types/types';\r\n\r\n// {\r\n//     id: 'ashdasvdyd',\r\n//     title: 'Cumplea√±os de jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     notes: 'Comprar el pastel',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Arturo'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            };\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [...state.events, action.payload]\r\n            };\r\n\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            };\r\n\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map( e => ( e.id === action.payload.id ) ? action.payload : e)\r\n            };\r\n\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter( e => ( e.id !== state.activeEvent.id )),\r\n                activeEvent: null\r\n            };\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { combineReducers } from \"redux\";\r\n\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n});","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    if(method === 'GET'){\r\n        return fetch(url);\r\n    }else{\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data),\r\n            redirect: 'follow'\r\n        });\r\n    }\r\n\r\n}\r\n\r\nconst fetchConToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if(method === 'GET'){\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            redirect: 'follow'\r\n        });\r\n    }else{\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data),\r\n            redirect: 'follow'\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","import moment from 'moment';\r\n\r\nexport const prepareEvents = (events = []) => {\r\n\r\n    return events.map( (e) => ({\r\n        ...e,\r\n        end: moment(e.end).toDate(),\r\n        start: moment(e.start).toDate(),\r\n    }));\r\n\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n    \r\n            if(body.ok){\r\n\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n\r\n                dispatch(eventAddNew(event));\r\n\r\n            }\r\n\r\n        } catch (error) {\r\n            \r\n            console.log(error);\r\n\r\n        }\r\n\r\n\r\n    }\r\n} \r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n});\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConToken(`events/${ event.id }`, event, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                dispatch(eventUpdated(event));\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            \r\n            console.log(error);\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { id } = getState().calendar.activeEvent;\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConToken(`events/${ id }`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                dispatch(eventDeleted());\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            \r\n            console.log(error);\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n});\r\n\r\nexport const eventStartLoading = () => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n\r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n            \r\n            const events = prepareEvents(body.eventos);\r\n\r\n            dispatch(eventLoaded(events));\r\n            \r\n        } catch (error) {\r\n            \r\n        }\r\n\r\n    }\r\n};\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n});\r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n})","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchSinToken('auth', {email, password}, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if(body.ok){\r\n\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n\r\n        }else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchSinToken('auth/new', {email, password, name}, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if(body.ok){\r\n\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n\r\n        }else{\r\n\r\n            Swal.fire('Error', body.msg, 'error');\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n\r\n        if(body.ok){\r\n\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n\r\n        }else{\r\n\r\n            dispatch(checkingFinish());\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authCheckingFinish\r\n});\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n\r\n        localStorage.clear();\r\n        dispatch(eventLogout());\r\n        dispatch(logout());\r\n\r\n    }\r\n}\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout\r\n})","  \r\nimport { useState } from \"react\"\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setvalues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setvalues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setvalues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: 'arturo@gmail.com',\r\n        lPassword: '123456'\r\n    });\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: 'Alex',\r\n        rEmail: 'alex@gmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456'\r\n    });\r\n\r\n    const {lEmail, lPassword} = formLoginValues;\r\n\r\n    const {rName, rEmail, rPassword1, rPassword2} = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        dispatch(startLogin(lEmail, lPassword));\r\n\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if(rPassword1 !== rPassword2){\r\n           Swal.fire('Error', 'Las contrase√±as deben de ser iguales', 'error'); \r\n        }\r\n\r\n        dispatch(startRegister(rEmail, rPassword1, rName));\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={ lEmail }\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contrase√±a\"\r\n                                name=\"lPassword\"\r\n                                value={ lPassword }\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={ rName }\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={ rEmail }\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contrase√±a\"\r\n                                name=\"rPassword1\"\r\n                                value={ rPassword1 }\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contrase√±a\"\r\n                                name=\"rPassword2\"\r\n                                value={ rPassword2 }\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { name } = useSelector(state => state.auth);\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">{ name }</span>\r\n            \r\n            <button className=\"btn btn-outline-danger\" onClick={handleLogout}>\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el d√≠a',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'D√≠a',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver m√°s (${total})`\r\n};","import React from 'react';\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n\r\n    const {title, user} = event;\r\n\r\n    return (\r\n        <div>\r\n            <span>{title}</span>\r\n            <span>- {user.name}</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n});\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n});","import React, { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport moment from 'moment';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n  title: '',\r\n  notes: '',\r\n  start: now.toDate(),\r\n  end: nowPlus1.toDate()\r\n};\r\n\r\nexport const CalendarModal = () => {\r\n\r\n  const { modalOpen } = useSelector(state => state.ui);\r\n  const { activeEvent } = useSelector(state => state.calendar);\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n  const [dateStart, setDateStart] = useState(now.toDate());\r\n  const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\r\n  const [titleValid, setTitleValid] = useState(true);\r\n\r\n  const [formValues, setFormValues] = useState(initEvent);\r\n\r\n  const { title, notes, start, end } = formValues;\r\n\r\n  useEffect(() => {\r\n    if(activeEvent){\r\n      setFormValues(activeEvent);\r\n    }else{\r\n      setFormValues(initEvent);\r\n    }\r\n  }, [activeEvent, setFormValues])\r\n\r\n  const handleInputChange = ({target}) => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [target.name]: target.value\r\n    });\r\n  }\r\n\r\n    const closeModal = () => {\r\n      dispatch(uiCloseModal());\r\n      dispatch(eventClearActiveEvent());\r\n      setFormValues(initEvent);\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n      setDateStart(e);\r\n      setFormValues({\r\n        ...formValues,\r\n        start: e\r\n      });\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n      setDateEnd(e);\r\n      setFormValues({\r\n        ...formValues,\r\n        end: e\r\n      });\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n\r\n      e.preventDefault();\r\n\r\n      const momentStart = moment(start);\r\n      const momentEnd = moment(end);\r\n\r\n      if(momentStart.isSameOrAfter(momentEnd)){\r\n        return Swal.fire('Error', 'La fecha fin debe de ser mayor a la fecha de inicio', 'error');\r\n      }\r\n\r\n      if(title.trim().length < 2){\r\n        return setTitleValid(false);\r\n      }\r\n\r\n      if(activeEvent){\r\n        dispatch(eventStartUpdate(formValues));\r\n      }else{\r\n        dispatch(eventStartAddNew(formValues));\r\n      }\r\n\r\n      setTitleValid(true);\r\n      closeModal();\r\n\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n          isOpen={modalOpen}\r\n        //   onAfterOpen={afterOpenModal}\r\n          onRequestClose={closeModal}\r\n          style={customStyles}\r\n          closeTimeoutMS={200}\r\n          className=\"modal\"\r\n          overlayClassName=\"modal-fondo\"\r\n        >\r\n          <h1> { (activeEvent) ? 'Nuevo evento' : 'Editer evento'} </h1>\r\n          <hr />\r\n          <form\r\n            className=\"container\"\r\n            onSubmit={handleSubmitForm}\r\n          >\r\n              <div className=\"form-group\">\r\n                  <label>Fecha y hora inicio</label>\r\n                  <DateTimePicker\r\n                    onChange={handleStartDateChange}\r\n                    value={dateStart}\r\n                    className=\"form-control\"\r\n                  />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <label>Fecha y hora fin</label>\r\n                  <DateTimePicker\r\n                    onChange={handleEndDateChange}\r\n                    value={dateEnd}\r\n                    minDate={dateStart}\r\n                    className=\"form-control\"\r\n                  />\r\n              </div>\r\n              <hr />\r\n              <div className=\"form-group\">\r\n                  <label>Titulo y notas</label>\r\n                  <input \r\n                      type=\"text\" \r\n                      className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                      placeholder=\"T√≠tulo del evento\"\r\n                      name=\"title\"\r\n                      autoComplete=\"off\"\r\n                      value={title}\r\n                      onChange={handleInputChange}\r\n                  />\r\n                  <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripci√≥n corta</small>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <textarea \r\n                      type=\"text\" \r\n                      className=\"form-control\"\r\n                      placeholder=\"Notas\"\r\n                      rows=\"5\"\r\n                      name=\"notes\"\r\n                      value={notes}\r\n                      onChange={handleInputChange}\r\n                  ></textarea>\r\n                  <small id=\"emailHelp\" className=\"form-text text-muted\">Informaci√≥n adicional</small>\r\n              </div>\r\n              <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-outline-primary btn-block\"\r\n              >\r\n                  <i className=\"far fa-save\"></i>\r\n                  <span> Guardar</span>\r\n              </button>\r\n          </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClick = () => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={handleClick}\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch(eventStartDelete());\r\n    };\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleDelete}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport {messages} from '../../helpers/calendar-messages-espa√±ol';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n    \r\n    const { events, activeEvent } = useSelector(state => state.calendar);\r\n    const { uid } = useSelector(state => state.auth);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(eventStartLoading());\r\n\r\n    }, [dispatch]);\r\n\r\n    const onDoubleClick = (e) =>{\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onSelectEvent = (e) =>{\r\n        dispatch(eventSetActive(e));\r\n    }\r\n\r\n    const onViewChange = (e) =>{\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) =>{\r\n\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return  {\r\n            style\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab />\r\n            {\r\n                activeEvent && <DeleteEventFab /> \r\n            }\r\n\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({isAuthenticated, component: Component, ...rest}) => {\r\n\r\n    return (\r\n        <Route {...rest} component={(props) => (\r\n            (isAuthenticated)\r\n            ? <Component {...props}/>\r\n            : <Redirect to=\"/login\"/>\r\n        )}/>\r\n    )\r\n}\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({isAuthenticated, component: Component, ...rest}) => {\r\n\r\n    return (\r\n        <Route {...rest} component={(props) => (\r\n            (isAuthenticated)\r\n            ? <Redirect to=\"/\"/>\r\n            : <Component {...props}/>\r\n        )}/>\r\n    )\r\n}\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {BrowserRouter as Router, Switch, Redirect} from \"react-router-dom\";\r\n\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { startChecking } from '../actions/auth';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { checking, uid } = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(startChecking());\r\n\r\n    }, [dispatch]);\r\n\r\n    if(checking){\r\n        return (<h5>Loading...</h5>);\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute exact path=\"/login\" component={LoginScreen} isAuthenticated={ !!uid } />\r\n                    <PrivateRoute exact path=\"/\" component={CalendarScreen} isAuthenticated={ !!uid } />\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './router/AppRouter';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}